version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version && docker --version && docker ps
      - $(aws ecr get-login --region $AWS_REGION --no-include-email)
      - REPOSITORY_URI=381570307688.dkr.ecr.$AWS_REGION.amazonaws.com/demo-flask-signup
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
# https://docs.aws.amazon.com/en_pv/codepipeline/latest/userguide/file-reference.html#file-reference-ecs-bluegreen
# ECS blue/green deployment uses imageDetail.json
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
# ECS standard  deployment imagedefinitions.json
#      - printf '[{"name":"demo-flask-signup","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Copying config files to root
      - cp build/appspec.yml appspec.yaml
      - cp build/taskdef.json taskdef.json

artifacts:
   files: 
       - imageDetail.json
       - appspec.yaml
       - taskdef.json
  #  files: imagedefinitions.json
